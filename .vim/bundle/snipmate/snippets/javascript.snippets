# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}},${3}
# if
snippet if
	if (${1:true}) {${2}};
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10});
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
snippet test
	test('${1}', function () {
		expect(1);
	});
snippet asyncTest
	asyncTest('${1}', function () {
		expect(1);
		${2}
		setTimeout(function() {
		}, 500);
	});

snippet fo
	${1}: function(${2}) {
		${3}
	},

snippet module
  module( "${1}", {
      setup: function() {
      },
      teardown: function() {
      }
  });

snippet describe
	describe('${1}', function () {
		//var 

		beforeEach(function() {
		});

		it('${2}', function() {
			${3}
		});
		
	});

snippet it
	it('${1}', function() {
		${2}
	});
	
snippet define
	define (
		[
			${1}
		],
		function (${2}) {
			'use strict';
	});

snippet view
	// ### ${1:view name}View
	// ${2}
	$1View = Backbone.View.extend({
		initialize: function() {
		},
		onDestroy: function() {
		},
		render: function() {
		}
	});

snippet collection
	// ### ${1}Collection
	// ${2}
	$1Collection = Backbone.Collection.extend({
		initialize: function() {
		}
	});

snippet model
	// ### ${1}Model
	// ${2}
	$1Model = Backbone.Model.extend({
		initialize: function() {
		},
		url: function() {
		}
	});

snippet head
	/*global ${1:globals}*/
	// Author: Cormac McGuire
	// ### Description
	// ${2:What the file is for}

snippet testhead
	/*global ${1:globals}runs, waitsFor, jasmine, describe, beforeEach, xit, it, expect*/
	// Author: Cormac McGuire
	// ### Description
	// ${2:What the file is for}

snippet runs
	runs(function() {
		${1}
	});
	waitsFor(function() {
	});
	runs(function() {
	});
